# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TestGoreleaserWorkflow < Formula
  desc "Software to test goreleaser workflow"
  homepage "https://github.com/ttl256/test-goreleaser-workflow"
  version "0.0.11"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.11/test-goreleaser-workflow_0.0.11_darwin_amd64.tar.gz"
      sha256 "d7f5a5ccb2336f00dd1606889ab07a53fc1770f8b1b566bc955e74c38b4bd86c"

      def install
        bin.install "test-goreleaser-workflow"
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
        (bash_completion/"test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
        (zsh_completion/"_test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
        (fish_completion/"test-goreleaser-workflow.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.11/test-goreleaser-workflow_0.0.11_darwin_arm64.tar.gz"
      sha256 "80d2011f3acec77032413b259ee1736a14393091438cd947e444865c9a7aacaa"

      def install
        bin.install "test-goreleaser-workflow"
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
        (bash_completion/"test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
        (zsh_completion/"_test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
        (fish_completion/"test-goreleaser-workflow.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.11/test-goreleaser-workflow_0.0.11_linux_amd64.tar.gz"
        sha256 "44f8a6417d20d212f82927c669e763e5794a31987799122872c3c0ec7d501d17"

        def install
          bin.install "test-goreleaser-workflow"
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
          (bash_completion/"test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
          (zsh_completion/"_test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
          (fish_completion/"test-goreleaser-workflow.fish").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.11/test-goreleaser-workflow_0.0.11_linux_arm64.tar.gz"
        sha256 "794dc4a4ef4263bd1126c60f21dc0b2c76ccc87837b6ad5c0c481dbd19cd4793"

        def install
          bin.install "test-goreleaser-workflow"
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
          (bash_completion/"test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
          (zsh_completion/"_test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
          (fish_completion/"test-goreleaser-workflow.fish").write output
          prefix.install_metafiles
        end
      end
    end
  end

  test do
    system "#{bin}/test-goreleaser-workflow --version"
  end
end
