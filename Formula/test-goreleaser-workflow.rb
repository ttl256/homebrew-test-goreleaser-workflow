# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TestGoreleaserWorkflow < Formula
  desc "Software to test goreleaser workflow"
  homepage "https://github.com/ttl256/test-goreleaser-workflow"
  version "0.0.12"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.12/test-goreleaser-workflow_0.0.12_darwin_amd64.tar.gz"
      sha256 "c54f3d19f06372671295ef8faee6fb4a4d69f66a018fafd5041680340ea296d3"

      def install
        bin.install "test-goreleaser-workflow"
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
        (bash_completion/"test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
        (zsh_completion/"_test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
        (fish_completion/"test-goreleaser-workflow.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.12/test-goreleaser-workflow_0.0.12_darwin_arm64.tar.gz"
      sha256 "8010f155d73dcc3f2c055bf7d1138402e62f95611dc420a00236c9fa28404b89"

      def install
        bin.install "test-goreleaser-workflow"
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
        (bash_completion/"test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
        (zsh_completion/"_test-goreleaser-workflow").write output
        output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
        (fish_completion/"test-goreleaser-workflow.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.12/test-goreleaser-workflow_0.0.12_linux_amd64.tar.gz"
        sha256 "9141b94f36844d3897b6d78d1cd349dc4a77c97b59ecb43af3ade244e0134315"

        def install
          bin.install "test-goreleaser-workflow"
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
          (bash_completion/"test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
          (zsh_completion/"_test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
          (fish_completion/"test-goreleaser-workflow.fish").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/test-goreleaser-workflow/releases/download/v0.0.12/test-goreleaser-workflow_0.0.12_linux_arm64.tar.gz"
        sha256 "2ec2a0f2958e6f9a8beee089d7ecdae4ce81908c6b24c7f734f15a2e2ec9f4c8"

        def install
          bin.install "test-goreleaser-workflow"
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion bash")
          (bash_completion/"test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion zsh")
          (zsh_completion/"_test-goreleaser-workflow").write output
          output = Utils.popen_read("#{bin}/test-goreleaser-workflow completion fish")
          (fish_completion/"test-goreleaser-workflow.fish").write output
          prefix.install_metafiles
        end
      end
    end
  end

  test do
    system "#{bin}/test-goreleaser-workflow --version"
  end
end
